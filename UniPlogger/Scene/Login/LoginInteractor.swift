//
//  LoginInteractor.swift
//  UniPlogger
//
//  Created by 손병근 on 2020/12/05.
//  Copyright (c) 2020 손병근. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func validateAccount(request: Login.ValidateAccount.Request)
    func validatePassword(request: Login.ValidatePassword.Request)
    func login(request: Login.Login.Request)
}

protocol LoginDataStore {
    
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker = LoginWorker()
    
    func validateAccount(request: Login.ValidateAccount.Request){
        let text = request.account
        let result = worker.validateAccount(text: text)
        presenter?.presentValidateAccount(response: .init(isValid: result))
    }
    
    func validatePassword(request: Login.ValidatePassword.Request){
        let text = request.password
        let result = worker.validatePassword(text: text)
        presenter?.presentValidatePassword(response: .init(isValid: result))
    }
    
    func login(request: Login.Login.Request) {
        UPLoader.shared.show()
        self.worker.login(request: request) { [weak self] (response) in
            self?.presenter?.presentLogin(response: response)
        }
    }
}
